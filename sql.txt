open Caqti_type.Std

(* type prepared = Caqti_type.t * (Caqti_driver_info.t -> Caqti_query.t) *)

let rec arg_type' :
    type r t.
    ?tuple_size:int ->
    (r, _, _, _, _, t Caqti_type.t) CamlinternalFormatBasics.fmt ->
    r ->
    t Caqti_type.t =
 fun ?(tuple_size = 0) fmt ->
  match fmt with
  | String (No_padding, fmt) -> assert false
  | _ -> assert false

let arg_type (CamlinternalFormatBasics.Format (fmt, _)) = arg_type' fmt proj_end
let row_type _ = assert false
let query _ = assert false

let all afmt rfmt =
  Caqti_request.create (arg_type afmt) (row_type rfmt) Caqti_mult.zero_or_more
    (query afmt)
